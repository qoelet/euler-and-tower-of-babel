(*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)


let
  isEven x = (x mod 2) = 0 and
  limit = 4000000
in
  let
    rec fibSeq a b acc
      = if (a + b) > limit
        then acc
        else
          let
            c = a + b
          in fibSeq b c (c :: acc)
  in
    let
      rec sumSeq seq
        = match seq with
            [] -> 0
          | h::t -> if isEven h
                    then h + sumSeq t
                    else sumSeq t
    in print_int (sumSeq (fibSeq 0 1 [])) ;;
